AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Part-8 - Provisions the ECS Service for running serverless containerized applications."

Parameters:
  VPCID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/VPCID
    Description: "The ID of the existing VPC."

  PrivateSubnet1:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/PrivateSubnet1
    Description: "he first private subnet."

  PrivateSubnet2:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/PrivateSubnet2
    Description: "The second private subnet."

  ALBSecurityGroupID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ALB/SecurityGroupID
    Description: "The ID of the Security Group of the ALB"

  ALBTargetGroupARN:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ALB/TargetGroupGreenARN
    Description: "The ARN of the Target Group of the ALB"

  ECSClusterARN:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/ClusterARN
    Description: "The ARN of the ECS Cluster"

  ECSServiceName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/Green/ServiceName
    Description: "The Name of the ECS Service"

  FargateSecurityGroupID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/SecurityGroupID
    Description: "The ID of the Security Group of the Fargate"

  ECSTaskDefinitionName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/Green/TaskDefinitionName
    Description: "The Name of the TaskDefinition in ECS Service"

  ECSContainerName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/Green/ContainerName
    Description: "The Name of the containerized application"

  ECSContainerImageName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/ECS/Green/ContainerImageName
    Description: "The Name of the container image"

  Stage:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/StageName
    Description: "The Name of the environment."

Resources:
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ECS/ECSCluster/${Stage}/${ECSServiceName}"
      RetentionInDays: 3

  ### Step 2️⃣: Register a Linux Task Definition
  ECSTaskExecutionGreenRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/Protect-Me" # Attach the required boundary
      Policies:
        - PolicyName: CustomECRLoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ECS/ECSCluster/${Stage}:*"

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ECSTaskDefinitionName
      Cpu: 256                   # Minimum valid CPU
      Memory: 512                # Minimum valid memory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionGreenRole.Arn # Execution Role which is for awslogs log driver
      RuntimePlatform:
        CpuArchitecture: ARM64   # Default: X86_64
        OperatingSystemFamily: LINUX
      ContainerDefinitions:
        - Name: !Ref ECSContainerName
          Image: !Ref ECSContainerImageName  # From Private ECR
          PortMappings:
            - ContainerPort: 443
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: ecs
              awslogs-create-group: true
      Tags:
        - Key: Name
          Value: !Ref ECSTaskDefinitionName
        - Key: Environment
          Value: !Ref Stage
        - Key: State
          Value: Green
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

  ### Step 3️⃣: Create a Service
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSClusterARN
      ServiceName: !Ref ECSServiceName
      TaskDefinition: !Ref ECSTaskDefinition
      PlatformVersion: LATEST
      LoadBalancers:                               # This links the ECS tasks to the ALB target group
        - TargetGroupArn: !Ref ALBTargetGroupARN
          ContainerName: !Ref ECSContainerName
          ContainerPort: 443
      LaunchType: FARGATE
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 60
      EnableExecuteCommand: false                  # Reduce attack surface
      EnableECSManagedTags: true
      PropagateTags: SERVICE
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED                 # Use private IPs
          SecurityGroups:
            - !Ref FargateSecurityGroupID
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: TestService
        - Key: Environment
          Value: !Ref Stage
        - Key: State
          Value: Green
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

Outputs:
  ECSServiceName:
    Description: Name of the ECS Sercice
    Value: !Ref ECSServiceName

  ECSServiceARN:
    Description: ARN of the ECS Sercice
    Value: !Ref ECSService