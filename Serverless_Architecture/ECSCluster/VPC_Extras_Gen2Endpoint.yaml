AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Part-3 - Adds additional networking resources like NAT Gateway and VPC Endpoints."

Parameters:
  VPCID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/VPCID
    Description: "The ID of the existing VPC."

  PublicSubnetID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/PublicSubnet1
    Description: "The ID of the public subnet that you want"

  PrivateSubnet1:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/PrivateSubnet1
    Description: "The first private subnet."

  PrivateSubnet2:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/VPC/PrivateSubnet2
    Description: "The second private subnet."

  Stage:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ECSCluster/StageName
    Description: "The Name of the environment."

Resources:
  ### NAT Gateway ###
  # Allows private subnets to access the internet while remaining isolated.
  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc # Elastic IP for the NAT Gateway
      Tags:
        - Key: Name
          Value: "EIP-of-NAT-Gateway"
        - Key: Environment
          Value: !Ref Stage
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster
    DeletionPolicy: Delete

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnetID # NAT Gateway is deployed in a public subnet
      AllocationId: !GetAtt NatEIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub "${VPCID}-NAT-Gateway"
        - Key: Environment
          Value: !Ref Stage
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

  ### Security Group for Private Subnet Instances ###
  PrivateSubnetGeneralSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for instances that need to access the internet via the NAT Gateway"
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: -1       # Allow all protocols (to handle various types of return traffic)
          CidrIp: 10.0.0.0/16  # Limit to traffic from inside the VPC
      SecurityGroupEgress:
        - IpProtocol: -1       # Allow all protocols for outbound internet access
          CidrIp: 0.0.0.0/0    # Allow NAT Gateway to access the internet
      Tags:
        - Key: Name
          Value: "Private-General-SG"
        - Key: Environment
          Value: !Ref Stage
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

#  ### VPC Interface Endpoint ###
#  # For ECR
#  VPCEndpointECRAPI:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VPCID
#      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.api"
#      VpcEndpointType: Interface
#      SubnetIds:
#        - !Ref PrivateSubnet1
#        - !Ref PrivateSubnet2
#      SecurityGroupIds:
#        - !Ref EndpointSecurityGroup
#      PrivateDnsEnabled: true        # If this is false, then you can't access to the service
#      Tags:
#        - Key: Name
#          Value: "Gen2Endpoint-ECR-API"
#        - Key: Environment
#          Value: !Ref Stage
#        - Key: Where
#          Value: !Ref "AWS::Region"
#        - Key: For
#          Value: Education
#        - Key: System
#          Value: ECSCluster
#
#  VPCEndpointECRDocker:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VPCID
#      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.dkr"
#      VpcEndpointType: Interface
#      SubnetIds:
#        - !Ref PrivateSubnet1
#        - !Ref PrivateSubnet2
#      SecurityGroupIds:
#        - !Ref EndpointSecurityGroup
#      PrivateDnsEnabled: true
#      Tags:
#        - Key: Name
#          Value: "Gen2Endpoint-ECR-DKR"
#        - Key: Environment
#          Value: !Ref Stage
#        - Key: Where
#          Value: !Ref "AWS::Region"
#        - Key: For
#          Value: Education
#        - Key: System
#          Value: ECSCluster
#
#  VPCEndpointS3:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VPCID
#      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"  # ECR needs to store image layers in Amazon S3
#      VpcEndpointType: Gateway
#      RouteTableIds:
#        - !Ref PrivateRouteTable1
#        - !Ref PrivateRouteTable2                          # Gateway Endpoints do not require a Security Group
#      Tags:
#        - Key: Name
#          Value: "Gen1Endpoint-S3"
#        - Key: Environment
#          Value: !Ref Stage
#        - Key: Where
#          Value: !Ref "AWS::Region"
#        - Key: For
#          Value: Education
#        - Key: System
#          Value: ECSCluster
#
#  # For CloudWatch Logs
#  VPCEndpointCloudWatch:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VPCID
#      ServiceName: !Sub "com.amazonaws.${AWS::Region}.logs"
#      VpcEndpointType: Interface
#      SubnetIds:
#        - !Ref PrivateSubnet1
#        - !Ref PrivateSubnet2
#      SecurityGroupIds:
#        - !Ref EndpointSecurityGroup
#      PrivateDnsEnabled: true
#      Tags:
#        - Key: Name
#          Value: "Gen2Endpoint-CWLogs"
#        - Key: Environment
#          Value: !Ref Stage
#        - Key: Where
#          Value: !Ref "AWS::Region"
#        - Key: For
#          Value: Education
#        - Key: System
#          Value: ECSCluster
#
#  ### Security Group for VPC Endpoints ###
#  EndpointSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: "Security group for VPC endpoints"
#      VpcId: !Ref VPCID
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 443
#          ToPort: 443
#          CidrIp: 10.0.0.0/16  # Limit to your VPC
#      SecurityGroupEgress:
#        - IpProtocol: -1       # Allow all protocols for outbound internet access
#          CidrIp: 0.0.0.0/0    # Allow NAT Gateway to access the internet
#      Tags:
#        - Key: Name
#          Value: "Gen2Endpoint-SecurityGroup"
#        - Key: Environment
#          Value: !Ref Stage
#        - Key: Where
#          Value: !Ref "AWS::Region"
#        - Key: For
#          Value: Education
#        - Key: System
#          Value: ECSCluster

  ### Create Separate Route Tables for Each Private Subnet ###
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: "Private-RouteTable-01"
        - Key: Environment
          Value: !Ref Stage
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: "Private-RouteTable-02"
        - Key: Environment
          Value: !Ref Stage
        - Key: Where
          Value: !Ref "AWS::Region"
        - Key: For
          Value: Education
        - Key: System
          Value: ECSCluster

  ### Route Table for Private Subnets ###
  # Manages routes for private subnets to use the NAT Gateway for outbound internet traffic.
  PrivateRouteToNAT1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0 # Routes all external traffic
      NatGatewayId: !Ref NatGateway

  PrivateRouteToNAT2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0 # Routes all external traffic
      NatGatewayId: !Ref NatGateway

  ### Associate Subnets with Their Route Tables ###
  PrivateRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  NatGatewayID:
    Description: The ID of the NAT Gateway
    Value: !Ref NatGateway

  NatEIP:  
    Description: The ID of the EIP that associated NAT Gateway
    Value: !Ref NatEIP

  PrivateSubnetGeneralSecurityGroup:
    Description: The ID of SecurityGroup for General Purpose within Private Subnets
    Value: !Ref PrivateSubnetGeneralSecurityGroup

#  ### VPC Interface Endpoints (Gen 2) ###
#  VPCEndpointECRAPI:
#    Description: "üõ†Ô∏è VPC Interface Endpoint ID for ECR API (Used by ECS to pull images from ECR)"
#    Value: !Ref VPCEndpointECRAPI
#
#  VPCEndpointECRDocker:
#    Description: "üê≥ VPC Interface Endpoint ID for ECR Docker (Required for container image operations)"
#    Value: !Ref VPCEndpointECRDocker
#
#  VPCEndpointCloudWatch:
#    Description: "üìä VPC Interface Endpoint ID for CloudWatch (Used for ECS & VPC Flow Logs)"
#    Value: !Ref VPCEndpointCloudWatch

  ### Private Route Table Outputs ###
  PrivateRouteTable1:
    Description: ID of the Route Table for Private Subnet 1
    Value: !Ref PrivateRouteTable1

  PrivateRouteTable2:
    Description: ID of the Route Table for Private Subnet 2
    Value: !Ref PrivateRouteTable2

#  ### Route Outputs for CloudWatch ###
#  PrivateRouteCloudWatch1:
#    Description: Route entry for CloudWatch in Private Subnet 1
#    Value: !Sub "RouteTable: ${PrivateRouteTable1}, Destination: 3.234.0.0/24, Target: ${VPCEndpointCloudWatch}"
#
#  PrivateRouteCloudWatch2:
#    Description: Route entry for CloudWatch in Private Subnet 2
#    Value: !Sub "RouteTable: ${PrivateRouteTable2}, Destination: 3.234.0.0/24, Target: ${VPCEndpointCloudWatch}"

  ### ‚ö†Ô∏è Cost Warnings ###
  NatGatewayCostWarning:
    Description: "‚ö†Ô∏è Warning: The NAT Gateway is a paid service and incurs hourly charges, as well as data transfer charges. üïí Be cautious!"
    Value: "NAT Gateway is running and may generate costs. Delete the stack when not in use."

  Gen2EndpointCostWarning:
    Description: "‚ö†Ô∏è Interface Endpoints (Gen 2) incur hourly and data transfer charges! üïí Be cautious!"
    Value: "Interface Endpoints are active. Delete the stack when not in use to avoid unnecessary costs."